from social.pipeline.partial import partial

from requests import request, HTTPError

from django.core.files.base import ContentFile


def save_profile_picture(strategy, user, response, details, is_new=False,
                         *args, **kwargs):
    # Save Facebook profile photo into a user profile, assuming a profile model
    # with a profile_photo file-type attribute
    if is_new and strategy.backend.name == 'facebook':
        url = 'http://graph.facebook.com/{0}/picture'.format(response['id'])

        try:
            response = request('GET', url, params={'type': 'large'})
            response.raise_for_status()
        except HTTPError:
            pass
        else:
            profile = user.get_profile()
            profile.profile_photo.save('{0}_social.jpg'.format(user.username),
                                       ContentFile(response.content))
            profile.save()


def ask_for_password(strategy, *args, **kwargs):
    if strategy.session_get('password'):
        return {'password': strategy.session_get('password')}
    else:
        return strategy.redirect(strategy.build_absolute_uri('/password'))


@partial
def ask_for_slug(strategy, *args, **kwargs):
    if strategy.session_get('slug'):
        return {'slug': strategy.session_get('slug')}
    else:
        return strategy.redirect(strategy.build_absolute_uri('/slug'))


def set_password(strategy, user, *args, **kwargs):
    user.set_password(kwargs['password'])


def set_slug(strategy, user, *args, **kwargs):
    user.slug = kwargs['slug']


def remove_user(strategy, user, *args, **kwargs):
    return {'user': None}
